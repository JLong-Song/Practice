/*
在程式語言中，陣列可表示一系列相同型別的元素，對於若干個擁有相同數量元素的整數陣列，可以進一步加以計算，
二維陣列的應用更是廣泛! 以下是一個4*3的二維整數陣列：

8  9  10
15 20 35
60 22 4
55 23 4

若我們欲挑選其中三個數相加，並要求總和要盡可能大! 於是乎我們會挑選60、55、35這三個數字，相加的結果為150。

輸入說明：

第一行為一個正整數n，代表共有n筆測資，
每筆測資第一行為三個正整數m、n、k，代表將從大小為m*n的二維整數陣列中挑選k個整數作相加計算，
接下來m行代表矩陣的資料，每行輸入n個整數，整數之間以空白隔開。

輸出說明：
依據每筆輸入測資，每行輸出一個整數，代表挑選k個整數相加的最大可能總和。
*/

#include<iostream>
using namespace std;
int main(){
    int N,m,n,k;
    int i,j;
    int a=0,total=0,x,y;
    int arr[100][100];
    cin>>N;
    while(N--){
        cin>>m>>n>>k;
        for(i=0;i<m;i++){
            for(j=0;j<n;j++){
                cin>>arr[i][j];
            }
        }
        for(int K=1;K<=k;K++){
            for(i=0;i<m;i++){
                for(j=0;j<n;j++){
                    if(arr[i][j]>=a){
                        a=arr[i][j];
                        x=i;
                        y=j;
                    }
                }
            }
            total+=a;
            a=0;
            arr[x][y]=0;
        }
        cout<<total<<endl;
    }
    return 0;
}
